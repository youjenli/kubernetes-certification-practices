# https://github.com/dgkanatsios/CKAD-exercises/blob/main/d.configuration.md
# Create a Secret named 'my-secret' of type 'kubernetes.io/ssh-auth' in the namespace 'secret-ops'.
# Define a single key named 'ssh-privatekey', and point it to the file 'id_rsa' in this directory.
# k create secret generic my-secret --from-file=ssh-privatekey=id_rsa --type=kubernetes.io/ssh-auth -n secret-ops
# k get secret -n secret-ops my-secret -o yaml
# echo -n "dGVzdA==" | base64 -d

# Create a Pod named 'consumer' with the image 'nginx' in the namespace 'secret-ops', and consume the Secret as Volume.
# Mount the Secret as Volume to the path /var/app with read-only access.
# Open an interactive shell to the Pod, and render the contents of the file.
# k run consumer --image nginx -n secret-ops --restart=Never --dry-run=client -o yaml > pod.yaml

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: consumer
  name: consumer
  namespace: secret-ops
spec:
  containers:
  - image: nginx
    name: consumer
    resources: {}
    volumeMounts:
      - name: my-secret
        mountPath: /var/app
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  volumes:
    - name: my-secret
      secret:
        secretName: my-secret
        defaultMode: 0400
status: {}

# k describe po consumer -n secret-ops
# k exec consumer -n secret-ops -it -- ls /var/app
# k exec consumer -n secret-ops -it -- cat /var/app/ssh-privatekey
