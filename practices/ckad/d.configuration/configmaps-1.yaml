# https://github.com/dgkanatsios/CKAD-exercises/blob/main/d.configuration.md
# Tips, export to variable
# export ns="-n secret-ops"
# export do="--dry-run=client -o yaml"

# Create a configmap named config with values foo=lala,foo2=lolo
# Display its values
# k create cm config --from-literal=foo=lala --from-literal=foo2=lolo -o yaml
# k describe cm config

# Create and display a configmap from a file
# Create the file with
# echo -e "foo3=lili\nfoo4=lele" > config.txt # for Unix-like
# echo "foo3=lili`nfoo4=lele" > config.txt # for Windows
# https://stackoverflow.com/questions/36737410/echo-newline-to-powershell-console
# k create configmap config --from-file=config.txt -o yaml
# k describe configmap config

# Create and display a configmap from a .env file
# Create the file with the command
# echo -e "var1=val1\n# this is a comment\n\nvar2=val2\n#anothercomment" > config.env
# echo "var1=val1`n# this is a comment`n`nvar2=val2`n#anothercomment" | Out-File -Encoding "UTF8" config.env # for windows
# k create configmap config --from-env-file=config.env -o yaml

# Create and display a configmap from a file, giving the key 'special'
# Create the file with
# echo -e "var3=val3\nvar4=val4" > config4.txt # For Unix-like
# echo "var3=val3`nvar4=val4" > config.txt # For Windows
# k create cm config --from-file=special=config.txt

# Create a configMap called 'options' with the value var5=val5.
# Create a new nginx pod that loads the value from variable 'var5' in an env variable called 'option'
# k create cm options --from-literal=var5=val5 -o yaml
# k run options --image=nginx --restart=Never -o yaml --dry-run=client -o yaml > po.yaml
# k apply -f ./practices/ckad/d.configuration/configmaps-1.yaml

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  containers:
  - image: nginx
    name: nginx
    resources: {}
    env:
      - name: var5
        valueFrom:
          configMapKeyRef:
            name: options
            key: var5
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

# k exec options -c=options -it -- env